drop table if exists album_avec_collection cascade;
drop table if exists album_sans_collection cascade;
drop table if exists appartenance_serie cascade;
drop table if exists serie cascade;
drop table if exists auteuriser cascade;
drop table if exists auteur cascade;
drop table if exists collection cascade;
drop table if exists contenir cascade;
drop table if exists histoire cascade;
drop table if exists revue cascade;
drop table if exists editeur cascade;
drop table if exists volume cascade;
drop table if exists role cascade;

drop view if exists histoires_et_auteurs;
drop view if exists albums_et_collections;
drop view if exists albums_et_editeurs;
drop view if exists volumes_et_histoires;
drop view if exists auteuriser_et_role;
drop view if exists volumes_revues;

create table volume (
   no_volume     int           not null auto_increment,
   titre         varchar(255)  not null,
   annee_edition int           not null,
   primary key (no_volume)
) DEFAULT CHARSET utf8;
create table revue (
   no_volume   int not null,
   no_revue    int not null,
   no_editeur  int,
   primary key (no_volume)
) DEFAULT CHARSET utf8;
create table collection (
   no_collection  int           not null auto_increment,
   nom_collection varchar(255)  not null,
   no_editeur     int                   ,
   primary key (no_collection)
) DEFAULT CHARSET utf8;
create table album_sans_collection (
   no_volume  int not null,
   no_editeur int,
   primary key (no_volume)
) DEFAULT CHARSET utf8;
create table album_avec_collection (
   no_volume        int not null,
   no_collection    int not null,
   no_ds_collection int not null,
   primary key (no_volume)
) DEFAULT CHARSET utf8;
create table editeur (
   no_editeur  int          not null auto_increment,
   nom_editeur varchar(255) not null,
   primary key (no_editeur)
) DEFAULT CHARSET utf8;
create table contenir (
   no_volume   int not null,
   no_histoire int not null,
   annotation  varchar(255),
   primary key (no_volume,no_histoire)
) DEFAULT CHARSET utf8;
create table histoire (
   no_histoire    int          not null auto_increment,
   titre          varchar(255) not null,
   annee_parution int          not null,
   primary key (no_histoire)
) DEFAULT CHARSET utf8;
create table appartenance_serie (
   no_histoire int not null,
   no_serie    int not null,
   no_ds_serie int not null,
   primary key (no_histoire,no_serie)
) DEFAULT CHARSET utf8;
create table serie (
   no_serie    int          not null auto_increment,
   titre_serie varchar(255) not null,
   primary key (no_serie)
) DEFAULT CHARSET utf8;
create table auteuriser (
   no_auteur   int not null,
   no_histoire int not null,
   no_role     int not null,
   primary key (no_auteur,no_histoire,no_role)
) DEFAULT CHARSET utf8;
create table role (
	no_role  int not null auto_increment,
	nom_role varchar(255) not null,
   primary key (no_role)
) DEFAULT CHARSET utf8;
create table auteur (
   no_auteur     int          not null auto_increment,
   nom_auteur    varchar(255) not null,
   prenom_auteur varchar(255)         ,
   primary key (no_auteur)
) DEFAULT CHARSET utf8;

-- Constraints
alter table album_sans_collection add constraint albm_sns_clctn_fk_No_volume 
    foreign key (no_volume)
    references volume (no_volume)
	on delete cascade;

alter table revue add constraint revue_fk_No_volume 
    foreign key (no_volume)
    references volume (no_volume)
	on delete cascade;

alter table revue add constraint revue_fk_No_editeur
    foreign key (no_editeur)
    references editeur (no_editeur)
	on delete set null;

alter table album_avec_collection add constraint albm_vc_clctn_fk_No_volume 
    foreign key (no_volume)
    references volume (no_volume)
	on delete cascade;

alter table contenir add constraint contenir_fk_No_volume 
    foreign key (no_volume)
    references volume (no_volume)
	on delete cascade;

alter table contenir add constraint contenir_fk_No_histoire 
    foreign key (no_histoire)
    references histoire (no_histoire)
	on delete cascade;

alter table album_avec_collection add constraint albm_vc_clctn_fk_No_collection 
    foreign key (no_collection)
    references collection (no_collection)
	on delete restrict; -- prevent deletion of the parrent collection

alter table album_sans_collection add constraint albm_sns_clctn_fk_No_editeur 
    foreign key (no_editeur)
    references editeur (no_editeur)
	on delete set null;

alter table collection add constraint collection_fk_No_editeur 
    foreign key (no_editeur)
    references editeur (no_editeur)
	on delete set null;

alter table appartenance_serie add constraint appartenance_serie_fk_No_serie 
    foreign key (no_serie)
    references serie (no_serie)
	on delete cascade;

alter table appartenance_serie add constraint aprtnc_sr_fk_No_histoire 
    foreign key (no_histoire)
    references histoire (no_histoire)
	on delete cascade;

alter table auteuriser add constraint autorer_fk_No_auteur 
    foreign key (no_auteur)
    references auteur (no_auteur)
	on delete cascade;

alter table auteuriser add constraint autorer_fk_No_histoire 
    foreign key (no_histoire)
    references histoire (no_histoire)
	on delete cascade;

alter table auteuriser add constraint autorer_fk_No_role 
    foreign key (no_role)
    references role (no_role)
	on delete restrict;


-- Roles
insert into role (nom_role) values ('sc√©nariste');
insert into role (nom_role) values ('dessinateur');
insert into role (nom_role) values ('coloriste');

-- Vues
-- selectionne les auteurs pour chaque histoire avec leur role
create or replace view histoires_et_auteurs as
	select AR.no_histoire, A.no_auteur, A.nom_auteur, A.prenom_auteur, R.no_role, R.nom_role
	from (auteur A inner join auteuriser AR on A.no_auteur = AR.no_auteur)
	inner join role R on AR.no_role = R.no_role;

-- associe les editeurs aux albums sans collection
create or replace view albums_et_editeurs as
	select V.no_volume, V.titre, V.annee_edition, E.nom_editeur
	from (volume V inner join album_sans_collection A on V.no_volume = A.no_volume)
	inner join editeur E on E.no_editeur = A.no_editeur;

-- associe les collections aux albums avec collection
create or replace view albums_et_collections as
	select V.no_volume, V.titre, V.annee_edition, C.nom_collection, A.no_ds_collection
	from ((volume V inner join album_avec_collection A on V.no_volume = A.no_volume)
	inner join collection C on A.no_collection = C.no_collection)
	inner join editeur E on E.no_editeur = C.no_editeur;

-- associe les histoires aux albums
create or replace view volumes_et_histoires as
	select C.no_volume, H.no_histoire, H.titre
	from (contenir C inner join volume V on V.no_volume = C.no_volume)
	inner join histoire H on H.no_histoire = C.no_histoire;

-- associe les auteurs avec leur role
create or replace view auteuriser_et_role as
	select AR.no_histoire, AR.no_auteur, R.nom_role
	from auteuriser AR inner join role R on AR.no_role = R.no_role;

-- associe les revues avec leur titre et annee edition
create or replace view volumes_revues as
	select RE.no_revue, RE.no_editeur, V.titre, V.annee_edition
	from revue RE inner join volume V on RE.no_volume = V.no_volume;
